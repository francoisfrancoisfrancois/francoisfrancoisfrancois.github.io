<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Telescopic Text</title>
    
<style>
    
  /* Font Face Declarations */
    
  @font-face {
    font-family: 'HelveticaLTNarrow';
    src: local('☺'), url('fonts/helveticaltnarrow-webfont.woff') format('woff');
  }

  /* Base Page Styles */
    
  html, body {
    height: 100%;
    margin: 0;
    background-color: #FFFFFF;
    color: #000;
    font-family: 'HelveticaLTNarrow', 'Arial', sans-serif;
    font-stretch: condensed;
    font-size: 26px;
    line-height: 1.4;
    letter-spacing: 0.01em;
    font-variant-ligatures: common-ligatures;
    font-feature-settings: "tnum";
    hyphens: auto;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
  }

    @media (pointer: coarse) {
      .hover-caption {
        display: none !important;
      }
    }    

  /* Layout Structure */

  .page-wrapper {
    display: flex;
    flex-direction: column;
    min-height: 100dvh;
  }

  .content {
    flex: 1;
    margin: 8px 12px;
    text-align: left;
  }

  footer {
    margin: 8px 12px;
    text-align: left;
  }

  /* Expandable Elements */

  .expandable {
    color: inherit;
    cursor: pointer;
    background-color: #FFFF00;
    padding: 0;
    margin: 0;
    text-decoration: none;
    transition: background-color 0.3s, box-shadow 0.3s;
  }

  .expandable:hover,
  .expandable.hover-effect {
    color: white;
    background-color: #0000FF;
  }

  .expandable.clicked {
    color: inherit;
    background-color: #FFFF00;
  }

  .no-hover {
    pointer-events: none;
  }

  .highlighted {
    background-color: #FFFFB3 !important;
  }

  .hidden {
    display: none;
  }

  /* Hover Image Effects */

  #hoverBackground {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    z-index: 0; /* Important: should be behind main content */
    overflow: hidden;
    pointer-events: none;
  }

  .hover-image {
    position: absolute; /* now absolute inside the fixed container */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .show-image {
    opacity: 1;
  }

  /* Link Styles */
    
  a {
    color: black;
    cursor: pointer;
    text-decoration: underline;
    margin: 0;
    padding: 0;
  }

  a:hover {
    color: black;
  }

  .link:hover {
    cursor: alias;
  }

  .trigger:hover {
    position: relative;
    z-index: 1000;
  }
    
.hover-caption {
  position: fixed;
  bottom: 0;
  width: 100%;
  text-align: center;
  margin: 8px 0x;
  font-size: inherit;
  font-family: inherit;
  z-index: 1000;
  display: none;
  pointer-events: none; /* doesn't block interaction */
  transition: opacity 0.2s ease;
}

.hover-caption.show {
  display: block;
  opacity: 1;
}

</style>
    
</head>
<body>
<div id="hoverBackground">
  <img src="west.gif" alt="Western France" class="hover-image" id="hoverImageWestern">
  <img src="variable_font_animation.gif" alt="Typography Driven" class="hover-image" id="hoverImageType">
</div>
<div class="page-wrapper">
  <main class="content">
    Hi&thinsp;I’m&thinsp;<span class="expandable">François&thinsp;Elain</span><span class="hidden">François&thinsp;Elain,&thinsp;<span class="expandable">a&thinsp;28-year-old</span><span class="hidden">currently&thinsp;<span class="expandable">28&thinsp;years&thinsp;old.</span><span class="hidden">28&thinsp;years&thinsp;old,&thinsp;though&thinsp;I&thinsp;<span class="expandable">could</span><span class="hidden">may&thinsp;very&thinsp;well</span>&thinsp;be&thinsp;<span class="expandable">older.</span><span class="hidden"><span class="expandable">a&thinsp;little&thinsp;older.</span><span class="hidden">a&thinsp;little&thinsp;older&thinsp;by&thinsp;the&thinsp;time&thinsp;you&thinsp;read&thinsp;<span class="expandable">this.</span><span class="hidden">this,&thinsp;given&thinsp;that&thinsp;I&thinsp;don't&thinsp;<span class="expandable">update</span><span class="hidden">intend&thinsp;to&thinsp;update</span>&thinsp;this&thinsp;website&thinsp;<span class="expandable">regularly.</span><span class="hidden">with&thinsp;acute&thinsp;regularity.</span></span></span>&thinsp;I’m&thinsp;however&thinsp;<span class="expandable">unlikely</span><span class="hidden">much&thinsp;less&thinsp;likely</span>&thinsp;to&thinsp;be&thinsp;<span class="expandable">younger.</span><span class="hidden">any younger,&thinsp;as&thinsp;I’m&thinsp;constrained&thinsp;by&thinsp;the&thinsp;<span class="expandable">laws&thinsp;of&thinsp;physics.</span><span class="hidden">laws&thinsp;of&thinsp;physics&thinsp;<span>(i.e.,&nbsp;<a class="link hover-link" href="https://en.wikipedia.org/wiki/Time#:~:text=apparently irreversible" target="_blank">time</a>).</span></span></span></span></span>&thinsp;I’m&thinsp;a</span>&thinsp;<span class="expandable">designer</span><span class="hidden"><span class="expandable">graphic&thinsp;and&thinsp;type&thinsp;designer</span><span class="hidden"><span class="expandable">graphic designer</span><span class="hidden">freelance&thinsp;graphic&thinsp;designer&thinsp;with recent&thinsp;<span class="expandable">studio experience.</span><span class="hidden">experience&thinsp;including&thinsp;a&thinsp;4-year&thinsp;stint&thinsp;at&thinsp;<span class="expandable">HelloMe&thinsp;Studio.</span><span class="hidden">HelloMe&thinsp;Studio,&thinsp;in&thinsp;Berlin.</span></span>&thinsp;Trained&thinsp;in&thinsp;<span class="expandable">type&thinsp;design,</span><span class="hidden">type&thinsp;design&thinsp;through&thinsp;<span class="expandable">a&thinsp;Master’s</span><span class="hidden">the&thinsp;Master’s&thinsp;program&thinsp;of&thinsp;<span class="expandable">École&thinsp;Estienne</span><span class="hidden">École&thinsp;Estienne,&thinsp;in&thinsp;Paris,&thinsp;</span></span>&thinsp;and&thinsp;<span class="expandable">a&thinsp;postgraduate&thinsp;program,</span><span class="hidden">the postgraduate&thinsp;research&thinsp;program&thinsp;of&thinsp;the&thinsp;<span class="expandable">ANRT,</span><span class="hidden"><span class="expandable">Atelier&thinsp;National&thinsp;de&thinsp;Recherche&thinsp;Typographique,</span><span class="hidden">Atelier&thinsp;National&thinsp;de&thinsp;Recherche&thinsp;Typographique,&thinsp;in&thinsp;Nancy,</span></span></span></span>&thinsp;I’m</span>&thinsp;emphasizing&thinsp;a&thinsp;<span class="expandable">type-focused</span><span class="hidden">rather&thinsp;<a class="trigger type-trigger">typography-driven</a></span>&thinsp;<span class="expandable">practice.</span><span class="hidden">approach,&thinsp;though&thinsp;my&thinsp;practice&thinsp;spans&thinsp;<span class="expandable">wider.</span><span class="hidden"><a>identities,</a>&thinsp;<a>books,</a>&thinsp;<a>web&thinsp;projects,</a>&thinsp;and&thinsp;more.</span></span>&thinsp;Nowadays</span></span>&thinsp;<span class="expandable">based&thinsp;in&thinsp;Brest.</span><span class="hidden"><span class="expandable">based&thinsp;in</span><span class="hidden"><span class="expandable">located&thinsp;near</span><span class="hidden">revolving&thinsp;around</span></span>&thinsp;<span class="expandable">Brest,</span><span class="hidden"><span class="expandable">Brest,&thinsp;Brittany,</span><span class="hidden">the&thinsp;<a class="trigger western-trigger" data-caption="©&thinsp;European&thinsp;Organisation&thinsp;for&thinsp;the&thinsp;Exploitation&thinsp;of&thinsp;Meteorological&thinsp;Satellites">western&thinsp;end&thinsp;of&thinsp;mainland&thinsp;France</a>,</span></span>&thinsp;but&thinsp;<span class="expandable">globally&thinsp;available.</span><span class="hidden"><span class="expandable">globally&thinsp;active,</span><span class="hidden">globally&thinsp;active&thinsp;<span class="expandable">from&thinsp;a&thinsp;laptop.</span><span class="hidden">on&thinsp;UTC+1&thinsp;from&thinsp;a&thinsp;laptop.</span>&thinsp;I’m</span>&thinsp;available&thinsp;for&thinsp;<span class="expandable">freelance&thinsp;work.</span><span class="hidden">freelance&thinsp;and&thinsp;long&thinsp;term work.&thinsp;Feel&thinsp;free&thinsp;to&thinsp;<span class="expandable">reach&thinsp;out.</span><span class="hidden">hit&thinsp;me&thinsp;up&thinsp;for&thinsp;<span class="expandable">information.</span><span class="hidden">any&thinsp;further&thinsp;information.</span></span></span></span></span></span>
  </main>

  <footer class="footer-container">
        <span class="expandable">About</span>
        <span class="hidden">This&thinsp;is&thinsp;all&thinsp;you&thinsp;need&thinsp;to&thinsp;know&thinsp;about&thinsp;me.</span>
        <span class="expandable">Contact</span>
        <span class="hidden">You&thinsp;can&thinsp;contact&thinsp;me&thinsp;via&thinsp;<a class="link hover-link" href="https://www.myportfolio.com" target="_blank">email</a>&thinsp;or&thinsp;through&thinsp;my&thinsp;<a class="link hover-link" href="https://www.myportfolio.com" target="_blank">instagram</a>.</span>
    </footer>
        
</div>
    
<div id="hover-caption" class="hover-caption"></div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;

    let hoverEnabled = true;
    let mouseMovedAfterExpansion = false;
    let mouseX = 0;
    let mouseY = 0;

    // Track mouse position and movement
    window.addEventListener('mousemove', (e) => {
      const moved = e.clientX !== mouseX || e.clientY !== mouseY;

      if (!mouseMovedAfterExpansion && !hoverEnabled && moved) {
        hoverEnabled = true;
        mouseMovedAfterExpansion = true;

        checkHoveredImageTrigger();
        checkHoveredExpandable();

        // Re-enable hover styling globally
        document.querySelectorAll('.expandable').forEach(el => {
          el.classList.remove('no-hover');
        });
      }

      mouseX = e.clientX;
      mouseY = e.clientY;
    });

    function checkHoveredImageTrigger() {
      const el = document.elementFromPoint(mouseX, mouseY);
      if (el?.classList.contains('western-trigger')) showHoverImage(el, 'hoverImageWestern');
      if (el?.classList.contains('type-trigger')) showHoverImage(el, 'hoverImageType');
    }

    function checkHoveredExpandable() {
      const el = document.elementFromPoint(mouseX, mouseY);
      if (el?.classList.contains('expandable')) {
        el.classList.add('hover-effect');
        el.addEventListener('mouseleave', () => el.classList.remove('hover-effect'), { once: true });
      }
    }

    function showHoverImage(trigger, imageId) {
      if (!hoverEnabled) return;

      const hoverImage = document.getElementById(imageId);
      if (!hoverImage) return;

      document.querySelectorAll('.hover-image').forEach(img => img.classList.remove('show-image'));
      hoverImage.classList.add('show-image');

      // Show caption ONLY on non-touch devices
      if (!isTouchDevice) {
        const captionText = trigger.getAttribute('data-caption');
        const captionEl = document.getElementById('hover-caption');
        if (captionText && captionEl) {
          captionEl.textContent = captionText;
          captionEl.classList.add('show');
        }
      }

      trigger.addEventListener('mouseleave', () => {
        hoverImage.classList.remove('show-image');

        if (!isTouchDevice) {
          const captionEl = document.getElementById('hover-caption');
          if (captionEl) captionEl.classList.remove('show');
        }
      }, { once: true });
    }

    function setupHover(selector, imageId) {
      document.body.addEventListener('mouseenter', (e) => {
        if (e.target.matches(selector) && hoverEnabled) {
          showHoverImage(e.target, imageId);
        }
      }, true);
    }

    setupHover('.western-trigger', 'hoverImageWestern');
    setupHover('.type-trigger', 'hoverImageType');

    // Expandable logic
    document.body.addEventListener('click', (event) => {
      if (event.target.classList.contains('expandable')) {
        const expandable = event.target;
        const hidden = expandable.nextElementSibling;

        if (hidden && hidden.classList.contains('hidden')) {
          const expandContent = () => {
            const previous = document.querySelector('.highlighted');
            if (previous) previous.classList.remove('highlighted');

            hidden.classList.remove('hidden');
            expandable.style.display = 'none';
            hidden.classList.add('highlighted');

            hoverEnabled = false;
            mouseMovedAfterExpansion = false;

            hidden.querySelectorAll('.expandable').forEach(el => el.classList.add('no-hover'));
          };

          if (!isTouchDevice) {
            expandable.classList.add('hover-effect', 'clicked');
            setTimeout(() => {
              expandable.classList.remove('hover-effect', 'clicked');
              expandContent();
            }, 100);
          } else {
            expandContent();
          }
        }
      }
    });

    // Footer resize scroll handler
    const footer = document.querySelector('.footer-container');
    if (footer) {
      let previousHeight = footer.offsetHeight;
      const observer = new ResizeObserver(entries => {
        for (const entry of entries) {
          const newHeight = entry.contentRect.height;
          const diff = newHeight - previousHeight;
          if (diff > 0) window.scrollBy(0, diff);
          previousHeight = newHeight;
        }
      });
      observer.observe(footer);
    }

    // Touch device: Toggle image visibility on click
    if (isTouchDevice) {
      const triggerElements = document.querySelectorAll('.western-trigger, .type-trigger');
      triggerElements.forEach((trigger) => {
        trigger.addEventListener('click', function () {
          const imageId = trigger.classList.contains('western-trigger') ? 'hoverImageWestern' : 'hoverImageType';
          const hoverImage = document.getElementById(imageId);
          const isImageVisible = hoverImage.classList.contains('show-image');

          document.querySelectorAll('.hover-image').forEach(img => img.classList.remove('show-image'));

          if (!isImageVisible) {
            hoverImage.classList.add('show-image');
          }
        });
      });
    }
  });
</script>

</body>
</html>