<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Hi I'm Fran√ßois Elain</title>
    
  <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 100 100%22><text y=%22.9em%22 font-size=%2290%22>üïäÔ∏è</text></svg>">
    
<style>
    
  /* Font Face Declarations */
    
  @font-face {
    font-family: 'HelveticaLTNarrow';
    src: local('‚ò∫'), url('fonts/helveticaltnarrow-webfont.woff') format('woff');
  }
    
  @font-face {
    font-family: 'FragmentMono';
    src: local('‚ò∫'), url('fonts/FragmentMono-Regular.woff') format('woff');
  }

  /* Base Page Styles */
    
  html, body {
    height: 100%;
    margin: 0;
    background-color: #FFFDFA;
    color: #000000;
    font-family: 'HelveticaLTNarrow', 'Arial', sans-serif;
    font-stretch: condensed;
    font-size: 24px;
    line-height: 1.25;
    letter-spacing: 0.002em;
    font-kerning: normal;
    font-variant-ligatures: common-ligatures;
    font-feature-settings: "tnum";
    hyphens: auto;
    -webkit-hyphens: auto;
    -moz-hyphens: auto;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
    
    /* Hide hover caption on mobile devices */
    @media (max-width: 768px) {
      .hover-caption {
        display: none !important;
      }
    }

  /* Layout Structure */

  .page-wrapper {
    display: flex;
    flex-direction: column;
    min-height: 100dvh;
  }

  .content {
    flex: 1;
    margin: 5px 9px 31px 9px;
    text-align: left;
  }

  footer {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    margin: 0px 9px 8px 9px;
    position: relative;
    text-align: left;
  }

  .footer-left {
    flex-shrink: 0;
    max-width: 100%;
    display: relative;
    padding-right: 10px;
  }

  .footer-right {
    white-space: nowrap; /* Prevent line breaks */
    position: relative;
    font-family: 'FragmentMono', monospace;
    pointer-events: none; /* makes it click-through */
    right: 2px;
    z-index: 0;
  }

  /* Hides the ASCII Art when it's supposed to disappear */
  .footer-right.hidden {
    display: none;
  }
    
  /* Expandable Elements */

  .expandable {
    color: ;
    cursor: pointer;
    text-decoration: none;
    box-shadow: inset 0 -1.06em 0 #B4D9FD;
    transition: box-shadow 0.1s;
  }

  .expandable:hover,
  .expandable.hover-effect {
    color: #FFFDFA;
    box-shadow: inset 0 -1.06em 0 #a6fd29;
    transition: box-shadow 0.1s;
  }

  .expandable.clicked {
    color: inherit;
    box-shadow: inset 0 -1.06em 0 #B4D9FD;
  }

  .expandable.no-hover {
    pointer-events: none;
  }

  .highlighted {
    box-shadow: inset 0 -1.06em 0 #DDEEFE;
  }

  .hidden {
    display: none;
  }

  /* Hover Image Effects */

  #hoverBackground {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100dvh;
    z-index: 1; /* Important: should be behind main content */
    overflow: hidden;
    pointer-events: none;
  }

  .hover-image {
    position: absolute; /* now absolute inside the fixed container */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    opacity: 0;
    transition: opacity 0.2s ease;
  }

  .show-image {
    opacity: 1;
  }

  /* Link Styles */
    
  a {
    color: inherit;
    cursor: pointer;
    text-decoration: underline;
    margin: 0;
    padding: 0;
  }

  a:hover {
    color: white; /* fallback */
    mix-blend-mode: difference;
  }

  .link:hover {
    cursor: alias;
  }

.trigger:hover {
  position: relative;
  z-index: 1000;
}
    
.hover-caption {
  color: white; /* fallback */
  mix-blend-mode: difference;
  position: fixed;
  bottom: 0;
  width: 100%;
  text-align: center;
  margin: 8px 0px;
  font-size: inherit;
  font-family: inherit;
  z-index: 1000;
  display: none;
  pointer-events: none; /* doesn't block interaction */
  transition: opacity 0.2s ease;
}

.hover-caption.show {
  display: block;
  opacity: 1;
}
</style>
    
</head>
<body>
<div id="hoverBackground">
  <img src="west.gif" class="hover-image" id="hoverImageWestern">
  <img src="west.gif" class="hover-image" id="hoverImageType">
  <img src="book.jpg" class="hover-image" id="hoverImageBook">
</div>
<div class="page-wrapper">
  <main class="content">
    Hi&thinsp;I‚Äôm&thinsp;Fran√ßois&thinsp;Elain,&thinsp;<span class="expandable">a&thinsp;28-year-old</span><span class="hidden">currently&thinsp;<span class="expandable">28&thinsp;years&thinsp;old.</span><span class="hidden">28&thinsp;years&thinsp;old,&thinsp;though&thinsp;I&thinsp;<span class="expandable">could</span><span class="hidden">may&thinsp;very&thinsp;well</span>&thinsp;be&thinsp;<span class="expandable">older.</span><span class="hidden"><span class="expandable">a&thinsp;little&thinsp;older.</span><span class="hidden">a&thinsp;little&thinsp;older&thinsp;by&thinsp;the&thinsp;time&thinsp;you&thinsp;read&thinsp;<span class="expandable">this.</span><span class="hidden">this,&thinsp;given&thinsp;that&thinsp;I&thinsp;don't&thinsp;<span class="expandable">update</span><span class="hidden">intend&thinsp;to&thinsp;update</span>&thinsp;this&thinsp;website&thinsp;<span class="expandable">regularly.</span><span class="hidden">with&thinsp;acute&thinsp;regularity.</span></span></span>&thinsp;I‚Äôm&thinsp;however&thinsp;<span class="expandable">unlikely</span><span class="hidden">much&thinsp;less&thinsp;likely</span>&thinsp;to&thinsp;be&thinsp;<span class="expandable">younger.</span><span class="hidden">any younger,&thinsp;as&thinsp;I‚Äôm&thinsp;constrained&thinsp;by&thinsp;the&thinsp;<span class="expandable">laws&thinsp;of&thinsp;physics.</span><span class="hidden">laws&thinsp;of&thinsp;physics&thinsp;<span>(i.e.,&nbsp;<a class="link hover-link" href="https://en.wikipedia.org/wiki/Time#:~:text=apparently irreversible" target="_blank">time</a>).</span></span></span></span></span>&thinsp;I‚Äôm&thinsp;a</span>&thinsp;<span class="expandable">designer</span><span class="hidden"><span class="expandable">graphic&thinsp;and&thinsp;type&thinsp;designer</span><span class="hidden"><span class="expandable">graphic designer</span><span class="hidden">freelance&thinsp;graphic&thinsp;designer&thinsp;with&thinsp;recent&thinsp;<span class="expandable">studio experience.</span><span class="hidden">experience&thinsp;including&thinsp;a&thinsp;4-year&thinsp;stint&thinsp;at&thinsp;<span class="expandable">HelloMe&thinsp;Studio.</span><span class="hidden">HelloMe&thinsp;Studio,&thinsp;in&thinsp;Berlin.</span></span>&thinsp;Trained&thinsp;in&thinsp;<span class="expandable">type&thinsp;design,</span><span class="hidden">type&thinsp;design&thinsp;through&thinsp;<span class="expandable">a&thinsp;Master‚Äôs</span><span class="hidden">the&thinsp;Master‚Äôs&thinsp;program&thinsp;of&thinsp;<span class="expandable">√âcole&thinsp;Estienne</span><span class="hidden">√âcole&thinsp;Estienne,&thinsp;in&thinsp;Paris,</span></span>&thinsp;and&thinsp;<span class="expandable">a&thinsp;postgraduate&thinsp;program,</span><span class="hidden">the postgraduate&thinsp;research&thinsp;program&thinsp;of&thinsp;the&thinsp;<span class="expandable">ANRT,</span><span class="hidden"><span class="expandable">Atelier&thinsp;National&thinsp;de&thinsp;Recherche&thinsp;Typographique,</span><span class="hidden">Atelier&thinsp;National&thinsp;de&thinsp;Recherche&thinsp;Typographique,&thinsp;in&thinsp;Nancy,</span></span></span></span>&thinsp;I‚Äôm</span>&thinsp;emphasizing&thinsp;a&thinsp;<span class="expandable">type-focused</span><span class="hidden">rather&thinsp;<a class="trigger type-trigger" data-caption="Random&thinsp;Placeholder&thinsp;Type&thinsp;Work&thinsp;‚Äì&thinsp;2025">typography-driven</a></span>&thinsp;<span class="expandable">practice.</span><span class="hidden">approach,&thinsp;though&thinsp;my&thinsp;practice&thinsp;spans&thinsp;<span class="expandable">wider.</span><span class="hidden"><a>identities,</a>&thinsp;<a class="trigger book-trigger" data-caption="Random&thinsp;Placeholder&thinsp;Book&thinsp;Work&thinsp;‚Äì&thinsp;2025">books,</a>&thinsp;<a>web&thinsp;projects,</a>&thinsp;and&thinsp;more.</span></span>&thinsp;Nowadays</span></span>&thinsp;<span class="expandable">based&thinsp;in&thinsp;Brest.</span><span class="hidden"><span class="expandable">based&thinsp;in</span><span class="hidden"><span class="expandable">located&thinsp;near</span><span class="hidden">revolving&thinsp;around</span></span>&thinsp;<span class="expandable">Brest,</span><span class="hidden"><span class="expandable">Brest,&thinsp;Brittany,</span><span class="hidden">the&thinsp;<a class="trigger western-trigger" data-caption="¬©&thinsp;European&thinsp;Organisation&thinsp;for&thinsp;the&thinsp;Exploitation&thinsp;of&thinsp;Meteorological&thinsp;Satellites">western&thinsp;end&thinsp;of&thinsp;mainland&thinsp;France</a>,</span></span>&thinsp;but&thinsp;<span class="expandable">globally&thinsp;available.</span><span class="hidden"><span class="expandable">globally&thinsp;active,</span><span class="hidden">globally&thinsp;active&thinsp;<span class="expandable">from&thinsp;a&thinsp;laptop.</span><span class="hidden">on&thinsp;UTC+1&thinsp;from&thinsp;a&thinsp;laptop.</span>&thinsp;I‚Äôm</span>&thinsp;available&thinsp;for&thinsp;<span class="expandable">freelance&thinsp;work.</span><span class="hidden">freelance&thinsp;and&thinsp;long&thinsp;term work.&thinsp;Feel&thinsp;free&thinsp;to&thinsp;<span class="expandable">reach&thinsp;out.</span><span class="hidden">hit&thinsp;me&thinsp;up&thinsp;for&thinsp;<span class="expandable">information.</span><span class="hidden">any&thinsp;further&thinsp;information.</span></span></span></span></span>
  </main>

  <footer class="footer-container">
        <div class="footer-left">
        <span class="expandable">About</span>
        <span class="hidden">This&thinsp;is&thinsp;all&thinsp;you&thinsp;need&thinsp;to&thinsp;know&thinsp;about&thinsp;me.</span>
        <span class="expandable">Contact</span>
        <span class="hidden">You&thinsp;can&thinsp;contact&thinsp;me&thinsp;via&thinsp;<a class="link hover-link" href="https://www.myportfolio.com" target="_blank">email</a>&thinsp;or&thinsp;through&thinsp;my&thinsp;<a class="link hover-link" href="https://www.myportfolio.com" target="_blank">instagram</a>.</span>
        </div>
      
<div class="footer-right" id="asciiBird">
  &nbsp;&nbsp;_<br>
  &lt;' )<br>
  ( ( \<br>
  &nbsp;''|\
</div>
  </footer>
        
</div>
    
<div id="hover-caption" class="hover-caption"></div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
    let mouseMoved = false;

    // Function to apply hover effect for desktop
    function applyHoverEffect(trigger, imageId) {
      if (!mouseMoved && !isTouchDevice) return;

      const hoverImage = document.getElementById(imageId);
      if (!hoverImage) return;

      document.querySelectorAll('.hover-image').forEach(img => img.classList.remove('show-image'));
      hoverImage.classList.add('show-image');

      trigger.addEventListener('mouseleave', () => {
        hoverImage.classList.remove('show-image');
      });
    }

    function setupHoverTrigger(selector, imageId) {
      const trigger = document.querySelector(selector);
      if (!trigger) return;

      const hoverImage = document.getElementById(imageId);
      if (!hoverImage) return;

      if (isTouchDevice) {
        trigger.addEventListener('click', (e) => {
          e.preventDefault();
          const isVisible = hoverImage.classList.contains('show-image');
          document.querySelectorAll('.hover-image').forEach(img => img.classList.remove('show-image'));
          if (!isVisible) {
            hoverImage.classList.add('show-image');
          }
        });
      } else {
        trigger.addEventListener('mouseenter', () => applyHoverEffect(trigger, imageId));
        trigger.addEventListener('mouseleave', () => hoverImage.classList.remove('show-image'));
      }
    }

    setupHoverTrigger('.western-trigger', 'hoverImageWestern');
    setupHoverTrigger('.type-trigger', 'hoverImageType');
    setupHoverTrigger('.book-trigger', 'hoverImageBook');

    if (isTouchDevice) {
      document.body.addEventListener('click', (e) => {
        const isTrigger = e.target.closest('.trigger');
        if (!isTrigger) {
          document.querySelectorAll('.hover-image').forEach(img => img.classList.remove('show-image'));
        }
      });
    }

    function onMouseMove() {
      mouseMoved = true;
      window.removeEventListener('mousemove', onMouseMove);
    }
    window.addEventListener('mousemove', onMouseMove);

    // Caption logic
    const hoverCaption = document.getElementById('hover-caption');
    document.querySelectorAll('.hover-link, .trigger').forEach(el => {
      el.addEventListener('mouseenter', () => {
        const caption = el.dataset.caption;
        if (caption) {
          hoverCaption.innerHTML = caption;
          hoverCaption.classList.add('show');
        }
      });
      el.addEventListener('mouseleave', () => {
        hoverCaption.classList.remove('show');
      });
    });

    // Expandable logic
    document.body.addEventListener('click', (event) => {
      if (event.target.classList.contains('expandable')) {
        const expandable = event.target;
        const hidden = expandable.nextElementSibling;

        if (hidden && hidden.classList.contains('hidden')) {
          const expandContent = () => {
            const previous = document.querySelector('.highlighted');
            if (previous) previous.classList.remove('highlighted');

            hidden.classList.remove('hidden');
            expandable.style.display = 'none';
            hidden.classList.add('highlighted');

            const newExpandables = hidden.querySelectorAll('.expandable');

            if (!isTouchDevice) {
              newExpandables.forEach(el => el.classList.add('no-hover'));
              const onMove = () => {
                newExpandables.forEach(el => el.classList.remove('no-hover'));
                window.removeEventListener('mousemove', onMove);
              };
              window.addEventListener('mousemove', onMove);
            } else {
              newExpandables.forEach(el => el.classList.remove('no-hover'));
            }

            // ‚úÖ Only check visibility if inside the footer
            if (expandable.closest('footer')) {
              checkAsciiArtVisibility();
            }
          };

          if (!isTouchDevice) {
            expandable.classList.add('hover-effect', 'clicked');
            setTimeout(() => {
              expandable.classList.remove('hover-effect', 'clicked');
              expandContent();
            }, 100);
          } else {
            expandContent();
          }
        }
      }
    });

    // Touch feedback for expandables
    document.querySelectorAll('.expandable').forEach(item => {
      if (isTouchDevice) {
        item.addEventListener('touchstart', () => {
          item.classList.add('hover-effect');
          setTimeout(() => item.classList.remove('hover-effect'), 100);
        });
      }
    });

    // Footer resize scroll compensation
    const footer = document.querySelector('.footer-container');
    if (footer) {
      let previousHeight = footer.offsetHeight;

      const observer = new ResizeObserver(entries => {
        for (let entry of entries) {
          const newHeight = entry.contentRect.height;
          const heightDiff = newHeight - previousHeight;
          if (heightDiff > 0) {
            window.scrollBy(0, heightDiff);
          }
          previousHeight = newHeight;
        }
      });

      observer.observe(footer);
    }
      
    const left = document.querySelector('.footer-left');
    const right = document.querySelector('.footer-right');

    function checkOverlap() {
      // Always make sure right is visible before measuring
      const wasHidden = right.style.display === 'none';
      if (wasHidden) {
        right.style.display = ''; // Temporarily show it to measure
      }

      const leftRect = left.getBoundingClientRect();
      const rightRect = right.getBoundingClientRect();

      const overlap = !(leftRect.right < rightRect.left || 
                        leftRect.left > rightRect.right || 
                        leftRect.bottom < rightRect.top || 
                        leftRect.top > rightRect.bottom);

      if (overlap) {
        right.style.display = 'none';
      } else {
        if (wasHidden) {
          right.style.display = '';
        }
      }
    }

    // Re-check on resize and when either element changes size
    window.addEventListener('resize', checkOverlap);
    const observer = new ResizeObserver(checkOverlap);
    observer.observe(left);
    observer.observe(right);

    // Initial check
    checkOverlap();
      
  });
</script>
    
<script>
  const birdOpen = `&nbsp;&nbsp;_<br>&lt;' )<br>( ( \\<br>&nbsp;''|\\`;
  const birdClosed = `&nbsp;&nbsp;_<br>&lt;¬Ø )<br>( ( \\<br>&nbsp;''|\\`;

  const birdElement = document.getElementById('asciiBird');

  function blinkBird() {
    birdElement.innerHTML = birdClosed;
    setTimeout(() => {
      birdElement.innerHTML = birdOpen;
    }, 150); // Blink lasts 150 milliseconds
  }

  function scheduleBlink() {
    const nextBlinkIn = Math.random() * 5000 + 3000; // 3‚Äì8 seconds
    setTimeout(() => {
      blinkBird();
      scheduleBlink(); // Schedule the next blink
    }, nextBlinkIn);
  }

  document.addEventListener('DOMContentLoaded', scheduleBlink);
</script>

</body>
</html>